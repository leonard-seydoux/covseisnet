
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_example_1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_example_1.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_example_1.py:


Single-station covariance matrix
================================

Interchannel spectral covariance matrix calculated from the example trace
available in obspy.

We consider the continuous seismograms at the station RJOB from the BW seismic
network. The data is available in the obspy example data, readable without any
argument. In this case, the covariance matrix is calculated between the three
channels of the station RJOB, and has three components. 

The following example use a Fourier estimation window of 1 second and is
estimated over 5 consecutive windows.

.. GENERATED FROM PYTHON SOURCE LINES 16-53



.. image-sg:: /auto_examples/images/sphx_glr_plot_example_1_001.png
   :alt: Single-station multiple channels covariance
   :srcset: /auto_examples/images/sphx_glr_plot_example_1_001.png, /auto_examples/images/sphx_glr_plot_example_1_001_4_00x.png 4.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Network Stream of 3 traces from 1 stations:
    BW.RJOB..EHZ | 2009-08-24T00:20:03.000000Z - 2009-08-24T00:20:32.990000Z | 100.0 Hz, 3000 samples
    BW.RJOB..EHN | 2009-08-24T00:20:03.000000Z - 2009-08-24T00:20:32.990000Z | 100.0 Hz, 3000 samples
    BW.RJOB..EHE | 2009-08-24T00:20:03.000000Z - 2009-08-24T00:20:32.990000Z | 100.0 Hz, 3000 samples






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import covseisnet as csn

    # Read example stream
    stream = csn.read()

    # Echo stream
    print(stream)

    # Get channels
    channels = [trace.stats.channel for trace in stream]

    # # calculate covariance from stream
    # window_duration_sec = 1.0
    # average = 5
    # times, frequencies, covariances = csn.covariancematrix.calculate(
    #     stream, window_duration_sec, average
    # )

    # show covariance from first window and first frequency
    covariance_show = np.random.rand(3, 3)

    # Show
    fig, ax = plt.subplots()
    mappable = ax.matshow(covariance_show, vmin=0)

    # Labels
    ax.set_xticks(range(len(channels)), labels=channels)
    ax.set_yticks(range(len(channels)), labels=channels)
    ax.set_title("Single-station multiple channels covariance")
    plt.colorbar(mappable).set_label("Covariance modulus")

    # Show
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.421 seconds)


.. _sphx_glr_download_auto_examples_plot_example_1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_example_1.ipynb <plot_example_1.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_example_1.py <plot_example_1.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
