
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_example_a3_whiten.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_example_a3_whiten.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_example_a3_whiten.py:


Spectral whitening
==================

This example show the effect of spectral whitening on a stream of traces.
The stream is read from the obspy example data, and the whitening is performed
with the method :func:`~covseisnet.stream.NetworkStream.whiten`. The method
applies a Fourier transform to the traces, divides the spectrum of the traces
by the modulus of the spectrum (or a smooth version of it), and then applies the
inverse Fourier transform to the traces.

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: Python



    import covseisnet as csn









.. GENERATED FROM PYTHON SOURCE LINES 19-24

Read waveforms
--------------

This section reads an example stream of seismic data, which is shipped with
ObsPy. The stream contains three traces.

.. GENERATED FROM PYTHON SOURCE LINES 24-36

.. code-block:: Python


    # Read the example stream (shipped with ObsPy)
    stream = csn.read()

    # Extract the first trace, and preprocess it
    trace = stream[0]
    trace.filter("highpass", freq=0.4)

    # Plot trace and corresponding spectrum
    ax = csn.plot.trace_and_spectrogram(stream.traces[0], window_duration=2)





.. image-sg:: /auto_examples/images/sphx_glr_plot_example_a3_whiten_001.png
   :alt: Trace, Spectrogram
   :srcset: /auto_examples/images/sphx_glr_plot_example_a3_whiten_001.png, /auto_examples/images/sphx_glr_plot_example_a3_whiten_001_4_00x.png 4.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 37-45

Spectral whitenin (onebit)
--------------------------

The spectral whitening is applied to the stream using the method
:func:`~covseisnet.stream.NetworkStream.whiten`. The method applies a
Fourier transform to the traces, divides the spectrum of the traces by the
modulus of the spectrum, and then applies the inverse Fourier transform to
the traces.

.. GENERATED FROM PYTHON SOURCE LINES 45-58

.. code-block:: Python



    whitened_stream = stream.copy()
    whitened_stream.whiten(window_duration=10, smooth_length=0)

    # Plot whitened trace and corresponding spectrum
    ax = csn.plot.trace_and_spectrogram(
        whitened_stream.traces[0], window_duration=2
    )
    ax[0].set_title("Whitened trace")
    ax[1].set_title("Whitened spectrogram")





.. image-sg:: /auto_examples/images/sphx_glr_plot_example_a3_whiten_002.png
   :alt: Whitened trace, Whitened spectrogram
   :srcset: /auto_examples/images/sphx_glr_plot_example_a3_whiten_002.png, /auto_examples/images/sphx_glr_plot_example_a3_whiten_002_4_00x.png 4.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-68

Spectral whitening (smooth)
---------------------------

The spectral whitening is applied to the stream using the method
:func:`~covseisnet.stream.NetworkStream.whiten`. The method applies a Fourier
transform to the traces, divides the spectrum of the traces by a smooth
version of the modulus of the spectrum, and then applies the inverse Fourier
transform. The smoothing is performed with a Savitzky-Golay filter, with a
window length of 31 frequency bins.

.. GENERATED FROM PYTHON SOURCE LINES 68-78

.. code-block:: Python


    whitened_stream = stream.copy()
    whitened_stream.whiten(window_duration=10, smooth_length=31)

    # Plot whitened trace and corresponding spectrum
    ax = csn.plot.trace_and_spectrogram(
        whitened_stream.traces[0], window_duration=2
    )
    ax[0].set_title("Whitened trace (smooth)")
    ax[1].set_title("Whitened spectrogram (smooth)")



.. image-sg:: /auto_examples/images/sphx_glr_plot_example_a3_whiten_003.png
   :alt: Whitened trace (smooth), Whitened spectrogram (smooth)
   :srcset: /auto_examples/images/sphx_glr_plot_example_a3_whiten_003.png, /auto_examples/images/sphx_glr_plot_example_a3_whiten_003_4_00x.png 4.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.291 seconds)


.. _sphx_glr_download_auto_examples_plot_example_a3_whiten.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_example_a3_whiten.ipynb <plot_example_a3_whiten.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_example_a3_whiten.py <plot_example_a3_whiten.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_example_a3_whiten.zip <plot_example_a3_whiten.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
